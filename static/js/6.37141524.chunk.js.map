{"version":3,"sources":["utils/request.js","utils/endpoints.js","data/config.js","assets/images/logo-rasyiidu-black.png","views/BackgroundHeader/index.js","views/pages/Header/index.js","views/pages/DataConfirmation/index.js"],"names":["request","param","config","header","endpoint","method","data","url","ApiConfig","baseUrl","params","token","localStorage","getItem","headers","Authorization","axiosConfig","timeout","toUpperCase","shouldLogApi","console","log","Promise","resolve","reject","axios","then","response","body","catch","err","status","code","message","error","endpoints","postCreateSoal","getListSoal","getListUjian","getSoalById","gerListArticle","getUsers","getEvents","createEvent","createSchool","getSchool","importUser","createUser","login","chooseExamUser","id","startExamUser","status_ujian","generateFirsSoal","level_soal_terakhir","hasil_jawaban_terakhir","generateSoal","jawabSoalPilgan","getExamDetail","process","exams","1","2","3","4","5","6","7","8","9","10","11","12","module","exports","Header","className","DataConfirmation","children","history","useHistory","dispatch","useDispatch","useState","confirmLogout","setConfirmLogout","profile","useSelector","state","user","logout","a","type","RESET_USER","payload","push","show","onClose","shape","color","onClick","fluid","src","logo","alt","nama","totalSoal","userSoal","isLoading","setIsLoading","currentExam","dataExam","current","formData","setFormData","chooseExam","res","user_id","logs","exam_user_questions","idSoal","dataSoal","i","length","el","exam_user_answer","jawaban","hasil","Boolean","status_jawaban","key","exam_question","exam_question_answer","tipe_jawaban","jawabanUser","map","item","index","text_jawaban","SET_HISTORY_ID_USER_SOAL","SET_HISTORY_SOAL","SET_HISTORY_STATUS","SET_CURRENT_SOAL","SET_CURRENT_USER_EXAM","alert","useEffect","md","school_nama","htmlFor","readOnly","placeholder","onChange","e","value","user_participant","nis","required","jk","target","xs","disabled","block","grow","size","to"],"mappings":"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","file":"static/js/6.37141524.chunk.js","sourcesContent":["/*\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n *  IMPORTS\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n */\r\n\r\n// ----------------------------------------\r\n// PACKAGE IMPORTS\r\n// ----------------------------------------\r\nimport axios from \"axios\";\r\nimport { ApiConfig, shouldLogApi } from \"src/data/config\";\r\n\r\n// ----------------------------------------\r\n// LOCAL IMPORTS\r\n// ----------------------------------------\r\n// import ApiConfig from \"@app-configs/Api\";\r\n// import API from \"@app-api-endpoints\";\r\n\r\n/*\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n *  METHODS\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n */\r\nexport default function request(param, config, header = {}) {\r\n  // ApiConfig.devLog &&\r\n  // (ApiConfig.devLogApis.length === 0 ||\r\n  //   ApiConfig.devLogApis.indexOf(api) > -1 ||\r\n  //   ApiConfig.breakDevLogToken);\r\n\r\n  const { endpoint, method, data } = config;\r\n\r\n  const url = `${ApiConfig.baseUrl}${endpoint}`;\r\n  const params = {\r\n    ...param,\r\n    ...data,\r\n  };\r\n\r\n  let token = localStorage.getItem(\"token\"); //ApiConfig.getToken(getState);\r\n\r\n  // if (shouldLogApi && ApiConfig.breakDevLogToken) {\r\n  //   console.error(token);\r\n  // }\r\n\r\n  const headers = {\r\n    ...header,\r\n    // \"Content-Type\": \"application/json\",\r\n    // \"Accept\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  const axiosConfig = {\r\n    method,\r\n    url,\r\n    headers,\r\n    timeout: ApiConfig.timeout * 1000,\r\n  };\r\n\r\n  if (method.toUpperCase() === \"GET\") {\r\n    axiosConfig.params = params;\r\n  } else {\r\n    axiosConfig.data = params;\r\n  }\r\n  // console.log(\"config\", axiosConfig);\r\n\r\n  if (shouldLogApi) {\r\n    console.log(\r\n      \"[request start]\\n\\n-url: \",\r\n      url,\r\n      \"\\n\\n-method: \",\r\n      method,\r\n      \"\\n\\n-params: \",\r\n      params,\r\n      \"\\n\\n-config: \",\r\n      axiosConfig\r\n    );\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axios(axiosConfig)\r\n      .then((response) => {\r\n        if (shouldLogApi) {\r\n          console.log(\r\n            \"[response received]\\n\\n-url: \",\r\n            url,\r\n            \"\\n\\n-method: \",\r\n            method,\r\n            \"\\n\\n-params: \",\r\n            params,\r\n            \"\\n\\n-response: \",\r\n            response\r\n          );\r\n        }\r\n\r\n        const body = response.data;\r\n        resolve(body);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"[response error]\\n\\n-url: \",\r\n          url,\r\n          \"\\n\\n-method: \",\r\n          method,\r\n          \"\\n\\n-params: \",\r\n          params,\r\n          \"\\n\\n-response: \",\r\n          err\r\n        );\r\n\r\n        reject({\r\n          status:\r\n            err.response && err.response.status ? err.response.status : 999,\r\n          code: \"x999\",\r\n          message: err.message,\r\n          error: err,\r\n          // additionals: {\r\n          //   url: url,\r\n          //   method: method,\r\n          //   params: JSON.stringify(params),\r\n\r\n          // },\r\n        });\r\n      });\r\n  });\r\n}\r\n","const endpoints = {\n  postCreateSoal: {\n    endpoint: \"/api/exam/question/save-all\",\n    method: \"POST\",\n    data: {},\n  },\n  getListSoal: {\n    endpoint: \"/api/exam/question\",\n    method: \"GET\",\n    data: {},\n  },\n  getListUjian: {\n    endpoint: \"/api/exam\",\n    method: \"GET\",\n    data: {},\n  },\n  getSoalById: {\n    endpoint: \"/api/exam/question/\",\n    method: \"GET\",\n    data: {},\n  },\n  gerListArticle: {\n    endpoint: \"/api/exam/question/article\",\n    method: \"GET\",\n    data: {},\n  },\n  getUsers: {\n    endpoint: \"/api/user\",\n    method: \"GET\",\n    data: {},\n  },\n  getEvents: {\n    endpoint: \"/api/exam/event\",\n    method: \"GET\",\n    data: {},\n  },\n  createEvent: {\n    endpoint: \"/api/exam/event\",\n    method: \"POST\",\n    data: {},\n  },\n  createSchool: {\n    endpoint: \"/api/school\",\n    method: \"POST\",\n    data: {},\n  },\n  getSchool: {\n    endpoint: \"/api/school\",\n    method: \"GET\",\n    data: {},\n  },\n  importUser: {\n    endpoint: \"/api/user/import\",\n    method: \"POST\",\n    data: {},\n  },\n  createUser: {\n    endpoint: \"/api/user\",\n    method: \"POST\",\n    data: {},\n  },\n  login: {\n    endpoint: \"/api/user/login\",\n    method: \"POST\",\n    data: {},\n  },\n  chooseExamUser: {\n    endpoint: \"/api/exam/user\",\n    method: \"POST\",\n    data: {\n      id: null,\n    },\n  },\n  startExamUser: {\n    endpoint: \"/api/exam/user\",\n    method: \"POST\",\n    data: {\n      status_ujian: \"progress\",\n    },\n  },\n  generateFirsSoal: {\n    endpoint: \"/api/exam/user/question/generate\",\n    method: \"POST\",\n    data: {\n      level_soal_terakhir: null,\n      hasil_jawaban_terakhir: null,\n    },\n  },\n  generateSoal: {\n    endpoint: \"/api/exam/user/question/generate\",\n    method: \"POST\",\n    data: {},\n  },\n  jawabSoalPilgan: {\n    endpoint: \"/api/exam/user/answer\",\n    method: \"POST\",\n    data: {},\n  },\n  getExamDetail: {\n    endpoint: \"/api/exam/\",\n    method: \"GET\",\n    data: {},\n  },\n};\n\nexport default endpoints;\n","export const ID_SOAL_AKM = 1;\nexport const ID_SOAL_SURVEY_KARAKTER = 2;\nexport const EDITOR_CONFIG = {\n  extraPlugins: \"easyimage,tableresize,editorplaceholder\",\n  removePlugins: \"image\",\n  editorplaceholder: \"Ketik untuk membuat artikel\",\n  removeDialogTabs: \"link:advanced\",\n  height: 400,\n  // filebrowserUploadUrl: \"base64\",\n  toolbarGroups: [\n    {\n      name: \"basicstyles\",\n      groups: [\"basicstyles\"],\n    },\n    {\n      name: \"links\",\n      groups: [\"links\"],\n    },\n    {\n      name: \"paragraph\",\n      groups: [\"list\", \"blocks\"],\n    },\n    {\n      name: \"document\",\n      groups: [\"mode\"],\n    },\n    {\n      name: \"insert\",\n      groups: [\"insert\"],\n    },\n    {\n      name: \"styles\",\n      groups: [\"styles\"],\n    },\n  ],\n  // language: \"id\",\n  // uiColor: \"#AADC6E\",\n  removeButtons:\n    \"Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Source\",\n};\n\nexport const ApiConfig = {\n  baseUrl:\n    process.env.REACT_APP_ENVIRONTMENT === \"production\"\n      ? \"https://akm.rasyiidujs3.com\"\n      : process.env.REACT_APP_ENVIRONTMENT === \"prod-local\"\n      ? \"http://192.168.0.200:8082\"\n      : process.env.REACT_APP_ENVIRONTMENT === \"local\"\n      ? \"http://127.0.0.1:8081\"\n      : \"https://akm-api.aplikasiweb.site\",\n\n  timeout: 120,\n};\n\nexport const shouldLogApi = process.env.REACT_APP_ENVIRONTMENT !== \"production\";\n\nexport const access = {\n  0: \"Admin Utama\",\n  1: \"Admin MKKS\",\n  2: \"Proktor\",\n  3: \"Sub Proktor\",\n};\n\nexport const exams = {\n  1: \"AKM SMA Literasi\",\n  2: \"AKM SMA Numerasi\",\n  3: \"AKM SMP Literasi\",\n  4: \"AKM SMP Numerasi\",\n  5: \"Survey Karakter SMA\",\n  6: \"Survey Karakter SMP\",\n  7: \"Survey Lingkungan Belajar SMA\",\n  8: \"Survey Lingkungan Belajar SMP\",\n  9: \"Simulasi Literasi\",\n  10: \"Simulasi Numerasi\",\n  11: \"Simulasi Survey Karakter\",\n  12: \"Simulasi Survey Lingkungan Belajar\",\n};\n\nexport const statuses = {\n  0: \"Tidak Aktif\",\n  1: \"Aktif\",\n};\n\nexport const DATA_UKURAN_SOAL = [\n  { fontSize: 15, fontWeight: 700 },\n  { fontSize: 18, fontWeight: 500 },\n  { fontSize: 20, fontWeight: 300 },\n];\n\nexport const DATA_SOAL = [\n  { type: \"TarikGaris\" },\n  { type: \"Menjodohkan\" },\n  { type: \"Matching\" },\n  { type: \"PilihanGanda\" },\n  { type: \"MultipleSelection\" },\n  { type: \"Matrix\" },\n  { type: \"SingleSelectWithEssay\" },\n  { type: \"PilihanGandaVertical\" },\n  { type: \"ShortEssay\" },\n  // { type: 'Essay' },\n];\n","module.exports = __webpack_public_path__ + \"static/media/logo-rasyiidu-black.bb6b80e8.png\";","import React from \"react\";\n\nexport default function Header() {\n  return <div className=\"bg-header\" />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CContainer,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CModalBody,\n} from \"@coreui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { RESET_USER } from \"../../../redux/actions\";\nimport BGHeader from \"../../BackgroundHeader\";\nimport logo from \"../../../assets/images/logo-rasyiidu-black.png\";\n\nfunction DataConfirmation({ children }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [confirmLogout, setConfirmLogout] = useState(false);\n  const { profile } = useSelector((state) => state.user);\n  const toggleModalLogout = () => {\n    setConfirmLogout(!confirmLogout);\n  };\n  const logout = async () => {\n    try {\n      dispatch({ type: RESET_USER, payload: null });\n      history.push(\"/login\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <main className=\"c-main\">\n      <CModal show={confirmLogout} onClose={toggleModalLogout} shape=\"rounded\">\n        <CModalHeader>\n          <CModalTitle>Info</CModalTitle>\n        </CModalHeader>\n        <CModalBody>Apakah anda yakin akan keluar ?</CModalBody>\n        <CModalFooter>\n          <CButton shape=\"pill\" color=\"danger\" onClick={() => logout()}>\n            Ya\n          </CButton>\n          <CButton\n            shape=\"pill\"\n            color=\"success\"\n            onClick={() => setConfirmLogout(false)}\n          >\n            Tidak\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <BGHeader />\n      <CContainer fluid>\n        <div className=\"d-flex justify-content-between\">\n          <img src={logo} alt=\"logo-rasyiidu\" className=\"center\" />\n          <div className=\"\">\n            <strong className=\"text-white float-right mr-1\">\n              {profile.nama}\n            </strong>\n            <br />\n            <CButton\n              color=\"light\"\n              className=\"float-right font-weight-bold\"\n              shape=\"pill\"\n              onClick={() => setConfirmLogout(true)}\n            >\n              Logout\n            </CButton>\n          </div>\n        </div>\n        {children}\n      </CContainer>\n    </main>\n  );\n}\n\nexport default DataConfirmation;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CFormGroup,\n  CLabel,\n  CSpinner,\n  CInput,\n  CButton,\n} from \"@coreui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport {\n  SET_CURRENT_USER_EXAM,\n  SET_CURRENT_SOAL,\n  SET_HISTORY_ID_USER_SOAL,\n  SET_HISTORY_STATUS,\n  SET_HISTORY_SOAL,\n} from \"src/redux/actions\";\nimport endpoints from \"src/utils/endpoints\";\nimport request from \"src/utils/request\";\nimport Header from \"../Header\";\n\nfunction DataConfirmation() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { profile } = useSelector((state) => state.user);\n  const { totalSoal } = useSelector((state) => state.userSoal);\n  const [isLoading, setIsLoading] = useState(false);\n  const { current: currentExam } = useSelector((state) => state.dataExam);\n  const [formData, setFormData] = useState({\n    token: \"\",\n  });\n  // ----------------------------------------------------- Methods\n  const isLoggedIn = () => (profile.nama ? true : false);\n\n  const chooseExam = async () => {\n    setIsLoading(true);\n    let res = null;\n    try {\n      res = await request(null, {\n        ...endpoints.chooseExamUser,\n        data: {\n          id: null,\n          user_id: profile.id,\n          token: currentExam.token,\n        },\n      });\n\n      // set logs to question\n      if (res.data.status_ujian === \"progress\") {\n        const logs = res.data.exam_user_questions;\n        const idSoal = [];\n        const dataSoal = [];\n        const status = [];\n        for (let i = 0; i < logs.length; i++) {\n          const el = logs[i];\n          // push id_soal\n          idSoal.push(el.id);\n          // push status & soal\n          if (el.exam_user_answer?.jawaban) {\n            //push jawaban to status\n            status.push({\n              status: \"dijawab\",\n              hasil: Boolean(el.exam_user_answer.status_jawaban),\n            });\n\n            // push jawaban to soal\n            let key = \"status_jawaban\";\n            if (\n              el.exam_question.exam_question_answer.tipe_jawaban ===\n              \"isian_singkat\"\n            ) {\n              key = \"text_jawaban\";\n            }\n            const jawabanUser = el.exam_user_answer.jawaban;\n            dataSoal.push({\n              ...el.exam_question,\n              exam_question_answer: {\n                ...el.exam_question.exam_question_answer,\n                jawaban: el.exam_question.exam_question_answer.jawaban.map(\n                  (item, index) => {\n                    return {\n                      ...item,\n                      [key]: jawabanUser[index][\"key\"],\n                    };\n                  }\n                ),\n              },\n            });\n          } else {\n            if (\n              el.exam_question.exam_question_answer.tipe_jawaban ===\n              \"isian_singkat\"\n            ) {\n              dataSoal.push({\n                ...el.exam_question,\n                exam_question_answer: {\n                  ...el.exam_question.exam_question_answer,\n                  jawaban: el.exam_question.exam_question_answer.jawaban.map(\n                    (item) => {\n                      return {\n                        ...item,\n                        text_jawaban: \"\",\n                      };\n                    }\n                  ),\n                },\n              });\n            } else {\n              dataSoal.push({\n                ...el.exam_question,\n                exam_question_answer: {\n                  ...el.exam_question.exam_question_answer,\n                  jawaban: el.exam_question.exam_question_answer.jawaban.map(\n                    (item) => {\n                      return {\n                        ...item,\n                        status_jawaban: \"0\",\n                      };\n                    }\n                  ),\n                },\n              });\n            }\n            status.push({\n              status: \"belum_dijawab\",\n              hasil: false,\n            });\n          }\n        }\n\n        // add status_jawaban\n        if (logs.length < totalSoal) {\n          for (let i = logs.length; i < totalSoal; i++) {\n            status.push({\n              status: \"belum_dijawab\",\n              hasil: false,\n            });\n          }\n        }\n\n        dispatch({\n          type: SET_HISTORY_ID_USER_SOAL,\n          payload: idSoal,\n        });\n\n        dispatch({\n          type: SET_HISTORY_SOAL,\n          payload: dataSoal,\n        });\n\n        dispatch({\n          type: SET_HISTORY_STATUS,\n          payload: status,\n        });\n\n        dispatch({\n          type: SET_CURRENT_SOAL,\n          payload: { index: logs.length - 1 },\n        });\n      }\n\n      dispatch({ type: SET_CURRENT_USER_EXAM, payload: res.data });\n      setIsLoading(false);\n      history.push(\"/exam-start\");\n    } catch (error) {\n      alert(error.error.response.data.message);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // console.log(\"reload\");\n  }, [profile, currentExam]);\n\n  if (!isLoggedIn()) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Header>\n      <CRow className=\"mt-2\">\n        <CCol md={7}>\n          <CCard className=\"card-rounded shadow border-white\">\n            <CCardHeader className=\"d-flex direction-row justify-content-between align-items-center card-rounded border-0\">\n              <h6>\n                Selamat Datang {profile.nama} dari {profile.school_nama},\n                silahkan input token\n              </h6>\n            </CCardHeader>\n            <CCardBody className=\"pt-0\">\n              <h4>TOKEN: {currentExam.token}</h4>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol md={5}>\n          <CCard className=\"card-rounded shadow border-white\">\n            <CCardHeader className=\"d-flex direction-row justify-content-between align-items-center card-rounded border-0\">\n              <h3>Konfirmasi Data Peserta</h3>\n            </CCardHeader>\n            <CCardBody className=\"pt-0\">\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">NIS</CLabel>\n                <CInput\n                  readOnly\n                  placeholder=\"Input NIS\"\n                  onChange={(e) => {}}\n                  value={profile.data.user_participant.nis}\n                  required\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">Nama Peserta</CLabel>\n                <CInput\n                  readOnly\n                  placeholder=\"Input Nama Peserta\"\n                  onChange={(e) => {}}\n                  value={profile.nama}\n                  required\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">Jenis Kelamin</CLabel>\n                <CInput\n                  readOnly\n                  placeholder=\"Input Jenis Kelamin\"\n                  onChange={(e) => {}}\n                  value={profile.data.user_participant.jk}\n                  required\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">Input Token</CLabel>\n                <CInput\n                  placeholder=\"Input Token\"\n                  onChange={(e) =>\n                    setFormData({ ...formData, token: e.target.value })\n                  }\n                  value={formData.nama}\n                  required\n                />\n              </CFormGroup>\n              <CRow>\n                <CCol xs={12}>\n                  <CButton\n                    disabled={currentExam.token !== formData.token || isLoading}\n                    block\n                    onClick={() => chooseExam()}\n                    color=\"primary\"\n                  >\n                    {isLoading && <CSpinner grow size=\"sm\" />}Submit\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </Header>\n  );\n}\n\nexport default DataConfirmation;\n"],"sourceRoot":""}